name: Build wheels (test)

# Run workflow on new releases, and allow manual runs.
on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          # - ubuntu-latest
          - macos-latest
          - windows-latest

    env:
      LIBUSB_PACKAGE_NAME: libusb-package-weekly  # Define the new package name

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      # - name: Set up QEMU
      #   if: runner.os == 'Linux'
      #   uses: docker/setup-qemu-action@v3
      #   with:
      #     platforms: arm64

      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: '3.9'

      - name: Override package name in setup.cfg (Linux)
        run: sed -i 's/^name = libusb-package$/name = '"$LIBUSB_PACKAGE_NAME"'/' setup.cfg
        shell: bash
        if: runner.os == 'Linux'

      - name: Override package name in setup.cfg (macOS)
        run: sed -i '' 's/^name = libusb-package$/name = '"$LIBUSB_PACKAGE_NAME"'/' setup.cfg
        shell: bash
        if: runner.os == 'macOS'

      - name: Override package name in setup.cfg (Windows)
        run: |
          (Get-Content setup.cfg) -replace '^name = libusb-package$', "name = $env:LIBUSB_PACKAGE_NAME" | Set-Content setup.cfg
        shell: pwsh
        if: runner.os == 'Windows'

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.21.3

      - uses: actions/upload-artifact@v4
        with:
          name: wheelhouse-${{ matrix.os }}
          path: ./wheelhouse/*.whl

  collect_artifacts:
    needs: build_wheels
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # - name: Download artifacts (Ubuntu)
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: wheelhouse-ubuntu-latest
      #     path: ./dist-ubuntu

      - name: Download artifacts (Windows)
        uses: actions/download-artifact@v4
        with:
          name: wheelhouse-windows-latest
          path: ./wheelhouse-windows

      - name: Download artifacts (macOS)
        uses: actions/download-artifact@v4
        with:
          name: wheelhouse-macos-latest
          path: ./wheelhouse-macos

      - name: Combine artifacts
        run: |
          mkdir -p dist
          # cp ./wheelhouse-ubuntu/* dist/ || true
          cp ./wheelhouse-windows/* dist/ || true
          cp ./wheelhouse-macos/* dist/ || true

      - name: List ./dist
        run: ls ./dist

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: ./dist

  publish:
    needs: collect_artifacts
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write
      contents: write

    steps:
      - name: Download artifacts (Ubuntu)
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: ./dist

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          token: ${{ secrets.PAT }}
          files: ./dist/*

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          skip-existing: true
          repository-url: https://test.pypi.org/legacy/